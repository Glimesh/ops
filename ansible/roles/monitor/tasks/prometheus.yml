---

- name: Creating prometheus group
  group:
    name: "{{ prometheus_group_name }}"
    system: yes

- name: Creating prometheus user
  user:
    name: "{{ prometheus_user_name }}"
    group: "{{ prometheus_group_name }}"
    system: yes
    shell: "/sbin/nologin"
    comment: "{{ prometheus_user_name }} nologin User"
    createhome: no
    home: "/data/prometheus/"

- name: Creates prometheus data directory
  file:
    path: "/data/prometheus/"
    state: directory
    owner: "{{ prometheus_user_name }}"
    group: "{{ prometheus_group_name }}"
    mode: 0755

- name: Creates prometheus config directory
  file:
    path: "/etc/prometheus/"
    state: directory
    owner: root
    group: "{{ prometheus_group_name }}"
    mode: 0770

- name: Get current prometheus version
  command: "{{ local_bin_path }}/prometheus --version"
  check_mode: no
  changed_when: false
  failed_when: false
  register: __prometheus_version

- name: Determine whether we need to install prometheus
  set_fact:
    # if the version command failed, OR the parsed version did not match, then we install
    _install_prometheus: "{% if __prometheus_version.rc != 0 or __prometheus_version.stdout_lines[0].split(' ')[2] != prometheus_version %}true{% else %}false{% endif %}"

- name: Install prometheus
  when: _install_prometheus or prometheus_force_install
  block:
    - name: Download prometheus
      become: no
      unarchive:
        src: "https://github.com/prometheus/prometheus/releases/download/v{{ prometheus_version }}/prometheus-{{ prometheus_version }}.linux-amd64.tar.gz"
        dest: /tmp/
        remote_src: yes

    - name: Copy prometheus/promtool file to bin
      # Skip this when in --check mode as the download would have been skipped
      when: not ansible_check_mode
      copy:
        src: "/tmp/prometheus-{{ prometheus_version }}.linux-amd64/{{ item }}"
        dest: "{{ local_bin_path }}/{{ item }}"
        owner: "{{ prometheus_user_name }}"
        group: "{{ prometheus_group_name }}"
        remote_src: yes
        mode: 0755
      with_items:
        - prometheus
        - promtool
      notify:
        - restart prometheus

    - name: Delete prometheus tmp folder
      file:
        path: "/tmp/prometheus-{{ prometheus_version }}.linux-amd64"
        state: absent

- name: prometheus config file
  template:
    src: prometheus.conf.j2
    dest: /etc/prometheus/prometheus.conf
  notify:
    - restart prometheus

- name: Create Unit file for prometheus
  template: src=prometheus.service.j2 dest=/etc/systemd/system/prometheus.service mode=644
  notify:
    - restart prometheus

# Trigger systemctl reload/restart if needed
- name: Flush handlers
  meta: flush_handlers

- name: start prometheus service
  service: name=prometheus.service state=started enabled=yes

- name: Check if prometheus is accessible
  uri:
    url: http://localhost:9090
    method: GET
    status_code: 200

- name: configure prometheus for grafana
  include: grafana_add_datasource.yml
  vars:
    t_grafana_dashboard_name: Prometheus
    t_grafana_dashboard_type: prometheus
    t_grafana_dashboard_url: "http://localhost:9090"
    t_grafana_dashboard_http_method: "POST"
    t_grafana_dashboard_uid: "glim-prometheus"
    t_grafana_dashboard_is_default: true
  tags:
    - grafana

- name: configure caddy for prometheus
  include_role:
    name: caddy
    apply:
      tags:
        - caddy
    tasks_from: add_site
    public: no
  vars:
    t_caddy_site_name: prometheus
    t_caddy_site_host: "prometheus.{{ inventory_hostname }}"
    t_caddy_site_default_settings: true
    t_caddy_site_secure_headers: true
    t_caddy_site_reverse_proxy: "localhost:9090"
  tags:
    - caddy
